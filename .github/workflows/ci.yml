name: ci pipeline
on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name:  Checkout Code
        uses:  actions/checkout@v3

      - name:  Set up python
        uses:  actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest tests/
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup env files
        shell: bash
        run: |
          echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" > .env
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}" >> .env
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}" >> .env
          echo "REGISTRY_ID=${{ secrets.REGISTRY_ID }}" >> .env
          echo "MONITOR_API_TOKEN=${{ secrets.MONITOR_API_TOKEN }}" >> .env
          echo "MONITOR_PROJECT_ID=${{ secrets.MONITOR_PROJECT_ID }}" >> .env

      - name: Setup SSH Key
        shell: bash
        run: |
          echo "${{ secrets.EC2_KEY }}" > ~/ec2_key.pem
          chmod 400 ~/ec2_key.pem

      - name: Copy all project files to the EC2 instance
        shell: bash
        run: |
          # Copy all project files to the EC2 instance
          # scp /path/to/local/file.txt username@remote_host:/path/to/remote/directory/
          scp -o StrictHostKeyChecking=no -i ~/ec2_key.pem -r ./* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/mlopz-aws/

      - name: Copy .env file to the EC2 instance
        shell: bash
        run: |
          # Copy .env file to the EC2 instance
          scp -o StrictHostKeyChecking=no -i ~/ec2_key.pem -r ./.env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/mlopz-aws/

      - name: Deploy Code
        shell: bash
        run: |
          # SSH into the EC2 instance and deploy
          ssh -o StrictHostKeyChecking=no -i ~/ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            cd /home/${{ secrets.EC2_USER }}/mlopz-aws/ &&
            docker compose up --build -d
          "
      